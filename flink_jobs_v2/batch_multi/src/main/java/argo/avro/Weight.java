/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package argo.avro;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class Weight extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Weight\",\"namespace\":\"argo.avro\",\"fields\":[{\"name\":\"type\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"site\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"weight\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.String type;
  @Deprecated public java.lang.String site;
  @Deprecated public java.lang.String weight;

  /**
   * Default constructor.
   */
  public Weight() {}

  /**
   * All-args constructor.
   */
  public Weight(java.lang.String type, java.lang.String site, java.lang.String weight) {
    this.type = type;
    this.site = site;
    this.weight = weight;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return type;
    case 1: return site;
    case 2: return weight;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: type = (java.lang.String)value$; break;
    case 1: site = (java.lang.String)value$; break;
    case 2: weight = (java.lang.String)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'type' field.
   */
  public java.lang.String getType() {
    return type;
  }

  /**
   * Sets the value of the 'type' field.
   * @param value the value to set.
   */
  public void setType(java.lang.String value) {
    this.type = value;
  }

  /**
   * Gets the value of the 'site' field.
   */
  public java.lang.String getSite() {
    return site;
  }

  /**
   * Sets the value of the 'site' field.
   * @param value the value to set.
   */
  public void setSite(java.lang.String value) {
    this.site = value;
  }

  /**
   * Gets the value of the 'weight' field.
   */
  public java.lang.String getWeight() {
    return weight;
  }

  /**
   * Sets the value of the 'weight' field.
   * @param value the value to set.
   */
  public void setWeight(java.lang.String value) {
    this.weight = value;
  }

  /** Creates a new Weight RecordBuilder */
  public static argo.avro.Weight.Builder newBuilder() {
    return new argo.avro.Weight.Builder();
  }
  
  /** Creates a new Weight RecordBuilder by copying an existing Builder */
  public static argo.avro.Weight.Builder newBuilder(argo.avro.Weight.Builder other) {
    return new argo.avro.Weight.Builder(other);
  }
  
  /** Creates a new Weight RecordBuilder by copying an existing Weight instance */
  public static argo.avro.Weight.Builder newBuilder(argo.avro.Weight other) {
    return new argo.avro.Weight.Builder(other);
  }
  
  /**
   * RecordBuilder for Weight instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Weight>
    implements org.apache.avro.data.RecordBuilder<Weight> {

    private java.lang.String type;
    private java.lang.String site;
    private java.lang.String weight;

    /** Creates a new Builder */
    private Builder() {
      super(argo.avro.Weight.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(argo.avro.Weight.Builder other) {
      super(other);
    }
    
    /** Creates a Builder by copying an existing Weight instance */
    private Builder(argo.avro.Weight other) {
            super(argo.avro.Weight.SCHEMA$);
      if (isValidValue(fields()[0], other.type)) {
        this.type = data().deepCopy(fields()[0].schema(), other.type);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.site)) {
        this.site = data().deepCopy(fields()[1].schema(), other.site);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.weight)) {
        this.weight = data().deepCopy(fields()[2].schema(), other.weight);
        fieldSetFlags()[2] = true;
      }
    }

    /** Gets the value of the 'type' field */
    public java.lang.String getType() {
      return type;
    }
    
    /** Sets the value of the 'type' field */
    public argo.avro.Weight.Builder setType(java.lang.String value) {
      validate(fields()[0], value);
      this.type = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'type' field has been set */
    public boolean hasType() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'type' field */
    public argo.avro.Weight.Builder clearType() {
      type = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'site' field */
    public java.lang.String getSite() {
      return site;
    }
    
    /** Sets the value of the 'site' field */
    public argo.avro.Weight.Builder setSite(java.lang.String value) {
      validate(fields()[1], value);
      this.site = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'site' field has been set */
    public boolean hasSite() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'site' field */
    public argo.avro.Weight.Builder clearSite() {
      site = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'weight' field */
    public java.lang.String getWeight() {
      return weight;
    }
    
    /** Sets the value of the 'weight' field */
    public argo.avro.Weight.Builder setWeight(java.lang.String value) {
      validate(fields()[2], value);
      this.weight = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'weight' field has been set */
    public boolean hasWeight() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'weight' field */
    public argo.avro.Weight.Builder clearWeight() {
      weight = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    @Override
    public Weight build() {
      try {
        Weight record = new Weight();
        record.type = fieldSetFlags()[0] ? this.type : (java.lang.String) defaultValue(fields()[0]);
        record.site = fieldSetFlags()[1] ? this.site : (java.lang.String) defaultValue(fields()[1]);
        record.weight = fieldSetFlags()[2] ? this.weight : (java.lang.String) defaultValue(fields()[2]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
